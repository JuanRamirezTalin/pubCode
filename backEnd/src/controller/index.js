/* ----------------------------------------------------------------------------
  Purpose: Controller
  --------------------- -------------------------------------------------------
  20220122 v_01.00 JRT: Create
  -----------------------------------------------------------------------------
*/ "use strict";const MODEL_PROCESS="../model/cfg/cfgProcess",ROUTE=[],properties=require("../../package.json"),middlewares=require("./service/middleware/token.service")["middlewares"],fs=require("fs"),{BaseExtend,patron}=require("../model"),instanceProcess=require(MODEL_PROCESS)["instanceProcess"],newApp=new BaseExtend,path=newApp.getPath();instanceProcess.getMessage().then(r=>{r.isError||(Object.keys(r.data).forEach(e=>{r.data[e].active&&(e={route:r.data[e].route,file:r.data[e].file,type:r.data[e].type},ROUTE.push(e))}),ROUTE.forEach(e=>{let r="",t="",o="";null!=e.route&&(r=e.route),null!=e.file&&(t=e.file),""!==(o=null!=e.type?e.type.toUpperCase():o)&&(o="MICROSERVICE"===o?"microservices":"route"),t="./".concat(o).concat("/").concat(t),t=(t="microservices"===o?t.concat("/router"):t).concat(".js");e=path.join(__dirname,t);if(fs.existsSync(e))try{""!=r?newApp.getApplication().use(r,require(t)):newApp.getApplication().use(require(t))}catch(e){console.error("-[ ERROR ]------------------------"),console.error(" Date...: ",new Date),console.error(" File...: ",t),console.error(" Type...: ",o),console.error(" Message: ",e),console.error("----------------------------------")}}))}),module.exports=newApp,module.exports={BaseExtend:BaseExtend,properties:properties,middlewares:middlewares,patron:patron};
